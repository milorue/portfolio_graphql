type Query{
    milo: Person
    specificskills(skillType: SkillType): [Skill]
    skills: [Skill]
    birthday: Date
    links: Links
    education: Education
    jobs: [Job]
    projects: [Project]
    specificProjects(uses: [String]): [Project]
    login(email: String!, password: String!): LoginToken
    getUser(token: String!): User
    logout(token: String!): Boolean
}

type Mutation{
    createAccount(email: String!, password: String!, creationToken: String!) : Boolean
    addProject(token: String!, project: ProjectInput!): Boolean
    addJob(token: String!, skill: )
}

enum SkillType{
    WEB
    MOBILE
    DATABASE
    LANGUAGE
    TOOL
    SKILL
}

type Job {
    _id: ID
    userId: String
    title: String
    company: String
    location: Location
    startDate: Date
    endDate: Date
    responsibilities: [String]
}

type Location {
    city: String
    state: String
}

type Person {
    _id: ID
    userId: String
    firstName: String!
    lastName: String!
    birthday: Date
    age: Int
    email: String
}

type Date {
    day: Int
    month: Int
    year: Int
    dateString: String!
}

type Skill {
    _id: ID
    userId: String
    name: String!
    type: String
    yearsofexperience: Int
    tags: [String]
    note: String
}

type Links {
    _id: ID
    userId: String
    github: String
    linkedin: String
    devpost: String
    instagram: String
    twitter: String
    resume: String
}

type Project {
    _id: ID
    userId: String
    name: String!
    description: String
    used: [String]
    links: [String]
    repos: [String]
    videos: [String]
    note: String
    image: String
}

input ProjectInput {
    userId: ID!
    name: String!
    description: String!
    used: [String]!
    links: [String]!
    repos: [String]!
    videos: [String]!
    note: String!
    image: String!
}

input SkillInput {
    userId: String!
    name: String!
    type: String!
    yearsofexperience: Int!
    tags: [String]!
    note: String!
}

input JobInput {
    userId: String!
    title: String!
    company: String!
    location: Location!
    startDate: Date!
    endDate: Date!
    responsibilities: [String]!
}

type Education {
    _id: ID
    userId: String
    collegename: String
    degree: String
    major: String
    minor: String
    gpa: String
    awards: [String]
    city: String
    state: String
}

type LoginToken {
    token: String!
    login: Boolean!
    refreshToken: String!
    user: User
}

type User {
    userId: ID!
    email: String!
    admin: Boolean
}